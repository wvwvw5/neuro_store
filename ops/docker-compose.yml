version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: neuro_store_db
    environment:
      POSTGRES_DB: neuro_store
      POSTGRES_USER: neuro_user
      POSTGRES_PASSWORD: neuro_password
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/init:/docker-entrypoint-initdb.d
      - ./db/backup:/backup
    ports:
      - "5433:5432"
    networks:
      - neuro_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U neuro_user -d neuro_store"]
      interval: 30s
      timeout: 10s
      retries: 3

  # pgAdmin
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: neuro_store_pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@neurostore.com
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    ports:
      - "5050:80"
    networks:
      - neuro_network
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped

  # Redis (для кэширования и сессий)
  redis:
    image: redis:7-alpine
    container_name: neuro_store_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - neuro_network
    restart: unless-stopped
    command: redis-server --appendonly yes

  # FastAPI Backend
  backend:
    build:
      context: ..
      dockerfile: ops/Dockerfile.backend
    container_name: neuro_store_backend
    environment:
      - DATABASE_URL=postgresql://neuro_user:neuro_password@db:5432/neuro_store
      - REDIS_URL=redis://redis:6379
      - SECRET_KEY=your-secret-key-change-in-production
      - BACKEND_CORS_ORIGINS=http://localhost:3000,http://frontend:3000
      - ENVIRONMENT=development
    volumes:
      - ../app:/app/app
      - ../alembic.ini:/app/alembic.ini
      - ../alembic:/app/alembic
    ports:
      - "8000:8000"
    networks:
      - neuro_network
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    restart: unless-stopped
    command: >
      sh -c "uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload"

  # Next.js Frontend
  frontend:
    build:
      context: ../client
      dockerfile: ../ops/Dockerfile.frontend
    container_name: neuro_store_frontend
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8000
      - NEXT_PUBLIC_ENVIRONMENT=development
    volumes:
      - ../client:/app
      - /app/node_modules
      - /app/.next
    ports:
      - "3000:3000"
    networks:
      - neuro_network
    depends_on:
      - backend
    restart: unless-stopped
    command: npm run dev

  # Nginx (опционально, для production)
  nginx:
    image: nginx:alpine
    container_name: neuro_store_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    networks:
      - neuro_network
    depends_on:
      - backend
      - frontend
    restart: unless-stopped
    profiles:
      - production

volumes:
  postgres_data:
    driver: local
  pgadmin_data:
    driver: local
  redis_data:
    driver: local

networks:
  neuro_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
