import React, { useState, useEffect } from 'react';
import Head from 'next/head';
import Link from 'next/link';
import ProductCard from '../components/ProductCard';
import PlanCard from '../components/PlanCard';
import { Product, Plan } from '../types/product';
import { SubscriptionCreate } from '../types/subscription';

export default function Home() {
  const [products, setProducts] = useState<Product[]>([]);
  const [selectedProduct, setSelectedProduct] = useState<Product | null>(null);
  const [plans, setPlans] = useState<Plan[]>([]);
  const [selectedPlan, setSelectedPlan] = useState<Plan | null>(null);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState<string | null>(null);
  const [isAuthenticated, setIsAuthenticated] = useState(false);
  const [userToken, setUserToken] = useState<string | null>(null);

  // –ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏
  useEffect(() => {
    fetchProducts();
    checkAuthStatus();
  }, []);

  const checkAuthStatus = () => {
    if (typeof window !== 'undefined') {
      const token = localStorage.getItem('access_token');
      const tokenType = localStorage.getItem('token_type');
      setIsAuthenticated(!!token);
      setUserToken(token);
    }
  };

  // –ó–∞–≥—Ä—É–∑–∫–∞ –ø–ª–∞–Ω–æ–≤ –ø—Ä–∏ –≤—ã–±–æ—Ä–µ –ø—Ä–æ–¥—É–∫—Ç–∞
  useEffect(() => {
    if (selectedProduct) {
      fetchProductPlans(selectedProduct.id);
    }
  }, [selectedProduct]);

  const fetchProducts = async () => {
    try {
      setLoading(true);
      const response = await fetch('http://localhost:8000/api/v1/products/');
      if (!response.ok) throw new Error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–æ–¥—É–∫—Ç–æ–≤');
      
      const data = await response.json();
      setProducts(data);
    } catch (err) {
      setError(err instanceof Error ? err.message : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞');
    } finally {
      setLoading(false);
    }
  };

  const fetchProductPlans = async (productId: number) => {
    try {
      const response = await fetch(`http://localhost:8000/api/v1/products/${productId}/plans`);
      if (!response.ok) throw new Error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–ª–∞–Ω–æ–≤');
      
      const data = await response.json();
      setPlans(data);
      setSelectedPlan(null); // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π –ø–ª–∞–Ω
    } catch (err) {
      setError(err instanceof Error ? err.message : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞');
    }
  };

  const handleProductSelect = (product: Product) => {
    setSelectedProduct(product);
  };

  const handlePlanSelect = (planId: number) => {
    const plan = plans.find(p => p.id === planId);
    setSelectedPlan(plan || null);
  };

  const handleSubscribe = async () => {
    if (!selectedProduct || !selectedPlan) {
      setError('–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ–¥—É–∫—Ç –∏ –ø–ª–∞–Ω');
      return;
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é
    if (!isAuthenticated || !userToken) {
      alert('–î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤–æ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É');
      window.location.href = '/login';
      return;
    }

    const tokenType = localStorage.getItem('token_type') || 'bearer';

    try {
      const subscriptionData: SubscriptionCreate = {
        product_id: selectedProduct.id,
        plan_id: selectedPlan.id
      };

      const response = await fetch('http://localhost:8000/api/v1/subscriptions/', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'Authorization': `${tokenType} ${userToken}`
        },
        body: JSON.stringify(subscriptionData)
      });

      if (!response.ok) {
        if (response.status === 401) {
          alert('–°–µ—Å—Å–∏—è –∏—Å—Ç–µ–∫–ª–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–æ–π–¥–∏—Ç–µ –∑–∞–Ω–æ–≤–æ.');
          localStorage.removeItem('access_token');
          localStorage.removeItem('token_type');
          window.location.href = '/login';
          return;
        }
        const errorData = await response.json();
        throw new Error(errorData.detail || '–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏');
      }

      // –£—Å–ø–µ—à–Ω–∞—è –ø–æ–¥–ø–∏—Å–∫–∞
      alert('–ü–æ–¥–ø–∏—Å–∫–∞ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞! –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞.');
      setSelectedProduct(null);
      setSelectedPlan(null);
      setPlans([]);
    } catch (err) {
      setError(err instanceof Error ? err.message : '–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏');
    }
  };

  if (loading) {
    return (
      <div className="min-h-screen bg-gray-50 flex items-center justify-center">
        <div className="text-center">
          <div className="animate-spin rounded-full h-32 w-32 border-b-2 border-blue-600 mx-auto"></div>
          <p className="mt-4 text-gray-600">–ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–æ–¥—É–∫—Ç–æ–≤...</p>
        </div>
      </div>
    );
  }

  if (error) {
    return (
      <div className="min-h-screen bg-gray-50 flex items-center justify-center">
        <div className="text-center">
          <div className="text-red-500 text-6xl mb-4">‚ö†Ô∏è</div>
          <h2 className="text-2xl font-bold text-gray-900 mb-2">–û—à–∏–±–∫–∞</h2>
          <p className="text-gray-600 mb-4">{error}</p>
          <button
            onClick={fetchProducts}
            className="bg-blue-600 hover:bg-blue-700 text-white px-6 py-2 rounded-md"
          >
            –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞
          </button>
        </div>
      </div>
    );
  }

  return (
    <>
      <Head>
        <title>Neuro Store - –ú–∞–≥–∞–∑–∏–Ω –ø–æ–¥–ø–∏—Å–æ–∫ –Ω–∞ –Ω–µ–π—Ä–æ—Å–µ—Ç–∏</title>
        <meta name="description" content="–ü–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ –Ω–µ–π—Ä–æ—Å–µ—Ç–µ–≤—ã–µ —Å–µ—Ä–≤–∏—Å—ã" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
      </Head>

      <div className="min-h-screen bg-gray-50">
        {/* Header */}
        <header className="bg-white shadow-sm border-b">
          <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
            <div className="flex justify-between items-center py-6">
              <div className="flex items-center">
                <div className="text-3xl mr-3">üß†</div>
                <h1 className="text-2xl font-bold text-gray-900">Neuro Store</h1>
              </div>
              <nav className="hidden md:flex space-x-8">
                <Link href="/" className="text-gray-500 hover:text-gray-900">
                  –ü—Ä–æ–¥—É–∫—Ç—ã
                </Link>
                <Link href="/dashboard" className="text-gray-500 hover:text-gray-900">
                  –ú–æ–∏ –ø–æ–¥–ø–∏—Å–∫–∏
                </Link>
                <Link href="/dashboard" className="text-gray-500 hover:text-gray-900">
                  –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç
                </Link>
              </nav>
              {isAuthenticated ? (
                <Link href="/dashboard">
                  <span className="bg-green-600 hover:bg-green-700 text-white px-4 py-2 rounded-md cursor-pointer">
                    –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç
                  </span>
                </Link>
              ) : (
                <Link href="/login">
                  <span className="bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-md cursor-pointer">
                    –í–æ–π—Ç–∏
                  </span>
                </Link>
              )}
            </div>
          </div>
        </header>

        <main className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
          {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
          <div className="text-center mb-12">
            <h2 className="text-4xl font-bold text-gray-900 mb-4">
              –í—ã–±–µ—Ä–∏—Ç–µ –Ω–µ–π—Ä–æ—Å–µ—Ç—å –¥–ª—è –ø–æ–¥–ø–∏—Å–∫–∏
            </h2>
            <p className="text-xl text-gray-600 max-w-3xl mx-auto">
              –î–æ—Å—Ç—É–ø –∫ —Å–∞–º—ã–º –ø–µ—Ä–µ–¥–æ–≤—ã–º –ò–ò-—Å–µ—Ä–≤–∏—Å–∞–º –ø–æ –≤—ã–≥–æ–¥–Ω—ã–º —Ç–∞—Ä–∏—Ñ–∞–º. 
              –í—ã–±–∏—Ä–∞–π—Ç–µ –ø–ª–∞–Ω, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–¥—Ö–æ–¥–∏—Ç –∏–º–µ–Ω–Ω–æ –≤–∞–º.
            </p>
          </div>

          {/* –í—ã–±–æ—Ä –ø—Ä–æ–¥—É–∫—Ç–∞ */}
          <div className="mb-12">
            <h3 className="text-2xl font-semibold text-gray-900 mb-6">
              –î–æ—Å—Ç—É–ø–Ω—ã–µ –Ω–µ–π—Ä–æ—Å–µ—Ç–∏
            </h3>
            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
              {products.map((product) => (
                <div
                  key={product.id}
                  onClick={() => handleProductSelect(product)}
                  className="cursor-pointer"
                >
                  <ProductCard
                    product={product}
                    onSubscribe={() => handleProductSelect(product)}
                  />
                </div>
              ))}
            </div>
          </div>
          
          {/* –ö–Ω–æ–ø–∫–∏ –±—ã—Å—Ç—Ä—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π */}
          <div className="mt-12 space-y-4">
            <h2 className="text-2xl font-bold text-gray-800 mb-6 text-center">–ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è</h2>
            
            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4">
              <button
                onClick={() => window.location.href = '/register'}
                className="bg-blue-600 hover:bg-blue-700 text-white font-semibold py-3 px-6 rounded-lg transition-colors shadow-md"
              >
                üìù –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è
              </button>
              
              <button
                onClick={() => window.location.href = '/login'}
                className="bg-green-600 hover:bg-green-700 text-white font-semibold py-3 px-6 rounded-lg transition-colors shadow-md"
              >
                üîê –í–æ–π—Ç–∏
              </button>
              
              <button
                onClick={() => window.location.href = '/dashboard'}
                className="bg-purple-600 hover:bg-purple-700 text-white font-semibold py-3 px-6 rounded-lg transition-colors shadow-md"
              >
                üè† –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç
              </button>
              
              <button
                onClick={() => window.location.href = '/admin'}
                className="bg-red-600 hover:bg-red-700 text-white font-semibold py-3 px-6 rounded-lg transition-colors shadow-md"
              >
                ‚öôÔ∏è –ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å
              </button>
            </div>
          </div>

          {/* –í—ã–±–æ—Ä –ø–ª–∞–Ω–∞ */}
          {selectedProduct && plans.length > 0 && (
            <div className="mb-12">
              <div className="flex items-center justify-between mb-6">
                <h3 className="text-2xl font-semibold text-gray-900">
                  –¢–∞—Ä–∏—Ñ–Ω—ã–µ –ø–ª–∞–Ω—ã –¥–ª—è {selectedProduct.name}
                </h3>
                <button
                  onClick={() => setSelectedProduct(null)}
                  className="text-gray-500 hover:text-gray-700"
                >
                  ‚Üê –í—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥—É—é –Ω–µ–π—Ä–æ—Å–µ—Ç—å
                </button>
              </div>
              
              <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                {plans.map((plan) => (
                  <PlanCard
                    key={plan.id}
                    plan={plan}
                    isSelected={selectedPlan?.id === plan.id}
                    onSelect={handlePlanSelect}
                  />
                ))}
              </div>

              {/* –ö–Ω–æ–ø–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∏ */}
              {selectedPlan && (
                <div className="text-center mt-8">
                  <div className="bg-blue-50 border border-blue-200 rounded-lg p-6 max-w-md mx-auto mb-6">
                    <h4 className="text-lg font-semibold text-blue-900 mb-2">
                      –í—ã–±—Ä–∞–Ω–Ω—ã–π –ø–ª–∞–Ω
                    </h4>
                    <p className="text-blue-800">
                      {selectedPlan.name} - {selectedPlan.price} ‚ÇΩ –∑–∞ {selectedPlan.duration_days} –¥–Ω–µ–π
                    </p>
                  </div>
                  
                  <button
                    onClick={handleSubscribe}
                    className="bg-green-600 hover:bg-green-700 text-white px-8 py-3 rounded-lg text-lg font-semibold shadow-lg"
                  >
                    –û—Ñ–æ—Ä–º–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É
                  </button>
                </div>
              )}
            </div>
          )}

          {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–¥–ø–∏—Å–∫–∞—Ö */}
          {!selectedProduct && (
            <div className="bg-white rounded-lg shadow-md p-8 text-center">
              <div className="text-6xl mb-4">üöÄ</div>
              <h3 className="text-2xl font-semibold text-gray-900 mb-4">
                –ì–æ—Ç–æ–≤—ã –Ω–∞—á–∞—Ç—å?
              </h3>
              <p className="text-gray-600 mb-6 max-w-2xl mx-auto">
                –í—ã–±–µ—Ä–∏—Ç–µ –Ω–µ–π—Ä–æ—Å–µ—Ç—å –≤—ã—à–µ, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ã–µ —Ç–∞—Ä–∏—Ñ–Ω—ã–µ –ø–ª–∞–Ω—ã. 
                –ú—ã –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –≥–∏–±–∫–∏–µ —É—Å–ª–æ–≤–∏—è –∏ –≤—ã–≥–æ–¥–Ω—ã–µ —Ü–µ–Ω—ã –¥–ª—è –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.
              </p>
              <div className="grid grid-cols-1 md:grid-cols-3 gap-6 text-left">
                <div className="text-center">
                  <div className="text-3xl mb-2">‚ö°</div>
                  <h4 className="font-semibold mb-2">–ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç</h4>
                  <p className="text-sm text-gray-600">–ü–æ–¥–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–∏—Ä—É–µ—Ç—Å—è –º–≥–Ω–æ–≤–µ–Ω–Ω–æ</p>
                </div>
                <div className="text-center">
                  <div className="text-3xl mb-2">üîí</div>
                  <h4 className="font-semibold mb-2">–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å</h4>
                  <p className="text-sm text-gray-600">–ó–∞—â–∏—â–µ–Ω–Ω—ã–µ –ø–ª–∞—Ç–µ–∂–∏ –∏ –¥–∞–Ω–Ω—ã–µ</p>
                </div>
                <div className="text-center">
                  <div className="text-3xl mb-2">üì±</div>
                  <h4 className="font-semibold mb-2">–£–¥–æ–±—Å—Ç–≤–æ</h4>
                  <p className="text-sm text-gray-600">–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç</p>
                </div>
              </div>
            </div>
          )}
        </main>

        {/* Footer */}
        <footer className="bg-gray-900 text-white py-12">
          <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
            <div className="grid grid-cols-1 md:grid-cols-4 gap-8">
              <div>
                <h4 className="text-lg font-semibold mb-4">Neuro Store</h4>
                <p className="text-gray-400">
                  –õ—É—á—à–∏–µ –Ω–µ–π—Ä–æ—Å–µ—Ç–µ–≤—ã–µ —Å–µ—Ä–≤–∏—Å—ã –ø–æ –≤—ã–≥–æ–¥–Ω—ã–º —Ü–µ–Ω–∞–º
                </p>
              </div>
              <div>
                <h4 className="text-lg font-semibold mb-4">–ü—Ä–æ–¥—É–∫—Ç—ã</h4>
                <ul className="space-y-2 text-gray-400">
                  <li>–Ø–∑—ã–∫–æ–≤—ã–µ –º–æ–¥–µ–ª–∏</li>
                  <li>–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π</li>
                  <li>–ê–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö</li>
                </ul>
              </div>
              <div>
                <h4 className="text-lg font-semibold mb-4">–ü–æ–¥–¥–µ—Ä–∂–∫–∞</h4>
                <ul className="space-y-2 text-gray-400">
                  <li>FAQ</li>
                  <li>–ö–æ–Ω—Ç–∞–∫—Ç—ã</li>
                  <li>–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è</li>
                </ul>
              </div>
              <div>
                <h4 className="text-lg font-semibold mb-4">–ö–æ–º–ø–∞–Ω–∏—è</h4>
                <ul className="space-y-2 text-gray-400">
                  <li>–û –Ω–∞—Å</li>
                  <li>–ë–ª–æ–≥</li>
                  <li>–ö–∞—Ä—å–µ—Ä–∞</li>
                </ul>
              </div>
            </div>
            <div className="border-t border-gray-800 mt-8 pt-8 text-center text-gray-400">
              <p>&copy; 2024 Neuro Store. –í—Å–µ –ø—Ä–∞–≤–∞ –∑–∞—â–∏—â–µ–Ω—ã.</p>
            </div>
          </div>
        </footer>
      </div>
    </>
  );
}
